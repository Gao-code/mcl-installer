on:
  push:
    tags:
      - '*'

name: Auto Release

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: iTXTech MCL Installer ${{ github.ref }}
          draft: false
          prerelease: false

  release_assets:
    name: Release assets
    needs: create_release
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Install Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build MCL Installer
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Compress executable using UPX
        if: matrix.config.os == 'windows-latest'
        uses: crazy-max/ghaction-upx@v1
        with:
          version: latest
          file: ./target/release/mcl-installer.exe
          args: --best --lzma

      - name: Compress executable using UPX
        if: matrix.config.os == 'ubuntu-latest'
        uses: crazy-max/ghaction-upx@v1
        with:
          version: latest
          file: ./target/release/mcl-installer
          args: --best --lzma

      - name: Upload release assets Windows
        if: matrix.config.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: mcl-installer-${{ github.ref }}-windows-amd64.exe
          asset_path: ./target/release/mcl-installer.exe
          asset_content_type: application/octet-stream

      - name: Upload release assets Linux
        if: matrix.config.os == 'ubuntu-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: mcl-installer-${{ github.ref }}-linux-amd64
          asset_path: ./target/release/mcl-installer
          asset_content_type: application/octet-stream

      - name: Upload release assets macOS
        if: matrix.config.os == 'macos-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: mcl-installer-${{ github.ref }}-macos-amd64
          asset_path: ./target/release/mcl-installer
          asset_content_type: application/octet-stream

